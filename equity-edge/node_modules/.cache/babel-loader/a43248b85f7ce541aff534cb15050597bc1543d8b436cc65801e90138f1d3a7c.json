{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristina\\\\Projects\\\\EquityEdge\\\\equity-edge\\\\src\\\\UserComponents\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  userId,\n  userFullName\n}) => {\n  _s();\n  const [portfolio, setPortfolio] = useState([]);\n  const [cashBalance, setCashBalance] = useState(0);\n  const [transactionHistory, setTransactionHistory] = useState([]);\n\n  //   useEffect(() => {\n  //     // Fetch user data from the backend when the component mounts\n  //     const fetchData = async () => {\n  //       try {\n  //         // Fetch portfolio data\n  //         const portfolioResponse = await fetch(`/api/users/${userId}/portfolio`);\n  //         const portfolioData = await portfolioResponse.json();\n  //         setPortfolio(portfolioData);\n\n  //         // Fetch cash balance\n  //         const cashBalanceResponse = await fetch(`/api/users/${userId}/cash-balance`);\n  //         const cashBalanceData = await cashBalanceResponse.json();\n  //         setCashBalance(cashBalanceData.balance);\n\n  //         // Fetch transaction history\n  //         const transactionHistoryResponse = await fetch(`/api/users/${userId}/transactions`);\n  //         const transactionHistoryData = await transactionHistoryResponse.json();\n  //         setTransactionHistory(transactionHistoryData);\n  //       } catch (error) {\n  //         console.error('Error fetching user data:', error);\n  //       }\n  //     };\n\n  //     fetchData();\n  //   }, [userId]);\n\n  useEffect(() => {\n    // Simulated data for stocks\n    const fakeStocks = [{\n      symbol: 'AAPL',\n      quantity: 10\n    }, {\n      symbol: 'GOOGL',\n      quantity: 5\n    }, {\n      symbol: 'MSFT',\n      quantity: 8\n    }];\n\n    // Simulated data for transaction history\n    const fakeTransactions = [{\n      id: 1,\n      type: 'BUY',\n      symbol: 'AAPL',\n      quantity: 5,\n      price: 150\n    }, {\n      id: 2,\n      type: 'SELL',\n      symbol: 'GOOGL',\n      quantity: 2,\n      price: 2000\n    }, {\n      id: 3,\n      type: 'BUY',\n      symbol: 'MSFT',\n      quantity: 3,\n      price: 180\n    }];\n\n    // Set fake data to state\n    setPortfolio(fakeStocks);\n    setTransactionHistory(fakeTransactions);\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome \", userFullName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: portfolio.map(stock => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [stock.symbol, \" - \", stock.quantity, \" shares\"]\n        }, stock.symbol, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Cash Balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"$\", cashBalance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transaction History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: transactionHistory.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [transaction.type === 'BUY' ? 'Bought' : 'Sold', \" \", transaction.quantity, \" shares of \", transaction.symbol, \" for $\", transaction.price, \" each\"]\n        }, transaction.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"UCwOgW9MU8jKkm0Cr2Xt0nxN12A=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Dashboard","userId","userFullName","_s","portfolio","setPortfolio","cashBalance","setCashBalance","transactionHistory","setTransactionHistory","fakeStocks","symbol","quantity","fakeTransactions","id","type","price","children","fileName","_jsxFileName","lineNumber","columnNumber","map","stock","transaction","_c","$RefreshReg$"],"sources":["C:/Users/Cristina/Projects/EquityEdge/equity-edge/src/UserComponents/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Dashboard = ({ userId, userFullName }) => {\r\n  const [portfolio, setPortfolio] = useState([]);\r\n  const [cashBalance, setCashBalance] = useState(0);\r\n  const [transactionHistory, setTransactionHistory] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch user data from the backend when the component mounts\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         // Fetch portfolio data\r\n//         const portfolioResponse = await fetch(`/api/users/${userId}/portfolio`);\r\n//         const portfolioData = await portfolioResponse.json();\r\n//         setPortfolio(portfolioData);\r\n\r\n//         // Fetch cash balance\r\n//         const cashBalanceResponse = await fetch(`/api/users/${userId}/cash-balance`);\r\n//         const cashBalanceData = await cashBalanceResponse.json();\r\n//         setCashBalance(cashBalanceData.balance);\r\n\r\n//         // Fetch transaction history\r\n//         const transactionHistoryResponse = await fetch(`/api/users/${userId}/transactions`);\r\n//         const transactionHistoryData = await transactionHistoryResponse.json();\r\n//         setTransactionHistory(transactionHistoryData);\r\n//       } catch (error) {\r\n//         console.error('Error fetching user data:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, [userId]);\r\n\r\nuseEffect(() => {\r\n    // Simulated data for stocks\r\n    const fakeStocks = [\r\n      { symbol: 'AAPL', quantity: 10 },\r\n      { symbol: 'GOOGL', quantity: 5 },\r\n      { symbol: 'MSFT', quantity: 8 },\r\n    ];\r\n\r\n    // Simulated data for transaction history\r\n    const fakeTransactions = [\r\n      { id: 1, type: 'BUY', symbol: 'AAPL', quantity: 5, price: 150 },\r\n      { id: 2, type: 'SELL', symbol: 'GOOGL', quantity: 2, price: 2000 },\r\n      { id: 3, type: 'BUY', symbol: 'MSFT', quantity: 3, price: 180 },\r\n    ];\r\n\r\n    // Set fake data to state\r\n    setPortfolio(fakeStocks);\r\n    setTransactionHistory(fakeTransactions);\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Welcome {userFullName}</h2>\r\n\r\n      <div>\r\n        <h3>Portfolio</h3>\r\n        <ul>\r\n          {portfolio.map((stock) => (\r\n            <li key={stock.symbol}>\r\n              {stock.symbol} - {stock.quantity} shares\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Cash Balance</h3>\r\n        <p>${cashBalance}</p>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Transaction History</h3>\r\n        <ul>\r\n          {transactionHistory.map((transaction) => (\r\n            <li key={transaction.id}>\r\n              {transaction.type === 'BUY' ? 'Bought' : 'Sold'} {transaction.quantity} shares of {transaction.symbol} for ${transaction.price} each\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}