{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristina\\\\Projects\\\\EquityEdge\\\\equity-edge\\\\src\\\\UserComponents\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  userId,\n  userFullName\n}) => {\n  _s();\n  const [portfolio, setPortfolio] = useState([]);\n  const [cashBalance, setCashBalance] = useState(0);\n  const [transactionHistory, setTransactionHistory] = useState([]);\n  useEffect(() => {\n    // Fetch user data from the backend when the component mounts\n    const fetchData = async () => {\n      try {\n        // Fetch portfolio data\n        const portfolioResponse = await fetch(`/api/users/${userId}/portfolio`);\n        const portfolioData = await portfolioResponse.json();\n        setPortfolio(portfolioData);\n\n        // Fetch cash balance\n        const cashBalanceResponse = await fetch(`/api/users/${userId}/cash-balance`);\n        const cashBalanceData = await cashBalanceResponse.json();\n        setCashBalance(cashBalanceData.balance);\n\n        // Fetch transaction history\n        const transactionHistoryResponse = await fetch(`/api/users/${userId}/transactions`);\n        const transactionHistoryData = await transactionHistoryResponse.json();\n        setTransactionHistory(transactionHistoryData);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n    fetchData();\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome \", userFullName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: portfolio.map(stock => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [stock.symbol, \" - \", stock.quantity, \" shares\"]\n        }, stock.symbol, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Cash Balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"$\", cashBalance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transaction History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: transactionHistory.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [transaction.type === 'BUY' ? 'Bought' : 'Sold', \" \", transaction.quantity, \" shares of \", transaction.symbol, \" for $\", transaction.price, \" each\"]\n        }, transaction.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"UCwOgW9MU8jKkm0Cr2Xt0nxN12A=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Dashboard","userId","userFullName","_s","portfolio","setPortfolio","cashBalance","setCashBalance","transactionHistory","setTransactionHistory","fetchData","portfolioResponse","fetch","portfolioData","json","cashBalanceResponse","cashBalanceData","balance","transactionHistoryResponse","transactionHistoryData","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","stock","symbol","quantity","transaction","type","price","id","_c","$RefreshReg$"],"sources":["C:/Users/Cristina/Projects/EquityEdge/equity-edge/src/UserComponents/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Dashboard = ({ userId, userFullName }) => {\r\n  const [portfolio, setPortfolio] = useState([]);\r\n  const [cashBalance, setCashBalance] = useState(0);\r\n  const [transactionHistory, setTransactionHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch user data from the backend when the component mounts\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch portfolio data\r\n        const portfolioResponse = await fetch(`/api/users/${userId}/portfolio`);\r\n        const portfolioData = await portfolioResponse.json();\r\n        setPortfolio(portfolioData);\r\n\r\n        // Fetch cash balance\r\n        const cashBalanceResponse = await fetch(`/api/users/${userId}/cash-balance`);\r\n        const cashBalanceData = await cashBalanceResponse.json();\r\n        setCashBalance(cashBalanceData.balance);\r\n\r\n        // Fetch transaction history\r\n        const transactionHistoryResponse = await fetch(`/api/users/${userId}/transactions`);\r\n        const transactionHistoryData = await transactionHistoryResponse.json();\r\n        setTransactionHistory(transactionHistoryData);\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Welcome {userFullName}</h2>\r\n\r\n      <div>\r\n        <h3>Portfolio</h3>\r\n        <ul>\r\n          {portfolio.map((stock) => (\r\n            <li key={stock.symbol}>\r\n              {stock.symbol} - {stock.quantity} shares\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Cash Balance</h3>\r\n        <p>${cashBalance}</p>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Transaction History</h3>\r\n        <ul>\r\n          {transactionHistory.map((transaction) => (\r\n            <li key={transaction.id}>\r\n              {transaction.type === 'BUY' ? 'Bought' : 'Sold'} {transaction.quantity} shares of {transaction.symbol} for ${transaction.price} each\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}